
Lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000018e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000013a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000018e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006d0  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000642  00000000  00000000  000008f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000260  00000000  00000000  00000f36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00001198  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000035d  00000000  00000000  00001218  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000fc  00000000  00000000  00001575  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001671  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__vector_1>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e3       	ldi	r30, 0x3A	; 58
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  8e:	0c 94 9b 00 	jmp	0x136	; 0x136 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:

int main(void)
{

	//
	DDRB=0xFF;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << 5);
  9a:	25 98       	cbi	0x04, 5	; 4
	OCR1A = 0x7A12;
  9c:	82 e1       	ldi	r24, 0x12	; 18
  9e:	9a e7       	ldi	r25, 0x7A	; 122
  a0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
  a4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	
	
		EIMSK = (1 << INT0);
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	8d bb       	out	0x1d, r24	; 29
		sei();
  ac:	78 94       	sei
  ae:	ff cf       	rjmp	.-2      	; 0xae <main+0x18>

000000b0 <__vector_1>:
		_delay_ms(inital);
		*/
		

}
ISR(INT0_vect){
  b0:	1f 92       	push	r1
  b2:	0f 92       	push	r0
  b4:	0f b6       	in	r0, 0x3f	; 63
  b6:	0f 92       	push	r0
  b8:	11 24       	eor	r1, r1
  ba:	2f 93       	push	r18
  bc:	3f 93       	push	r19
  be:	4f 93       	push	r20
  c0:	5f 93       	push	r21
  c2:	6f 93       	push	r22
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	cf 93       	push	r28
  ce:	df 93       	push	r29
  d0:	ef 93       	push	r30
  d2:	ff 93       	push	r31
	
		for(int i = 0; i < 3; i++){
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	90 e0       	ldi	r25, 0x00	; 0
			
			PORTB |= (1 << i);
  d8:	c1 e0       	ldi	r28, 0x01	; 1
  da:	d0 e0       	ldi	r29, 0x00	; 0
			
				//OCR1A = 0x7A12;
				TCCR1A = 0;
  dc:	a0 e8       	ldi	r26, 0x80	; 128
  de:	b0 e0       	ldi	r27, 0x00	; 0
				TCCR1B =0b01101;
  e0:	e1 e8       	ldi	r30, 0x81	; 129
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	6d e0       	ldi	r22, 0x0D	; 13
					
				while ((TIFR1&(1<<OCF1A) )==0){
						
				}
				TCCR1B =0;
				TIFR1 = 1<<OCF1A;
  e6:	52 e0       	ldi	r21, 0x02	; 2
}
ISR(INT0_vect){
	
		for(int i = 0; i < 3; i++){
			
			PORTB |= (1 << i);
  e8:	45 b1       	in	r20, 0x05	; 5
  ea:	9e 01       	movw	r18, r28
  ec:	08 2e       	mov	r0, r24
  ee:	02 c0       	rjmp	.+4      	; 0xf4 <__vector_1+0x44>
  f0:	22 0f       	add	r18, r18
  f2:	33 1f       	adc	r19, r19
  f4:	0a 94       	dec	r0
  f6:	e2 f7       	brpl	.-8      	; 0xf0 <__vector_1+0x40>
  f8:	24 2b       	or	r18, r20
  fa:	25 b9       	out	0x05, r18	; 5
			
				//OCR1A = 0x7A12;
				TCCR1A = 0;
  fc:	1c 92       	st	X, r1
				TCCR1B =0b01101;
  fe:	60 83       	st	Z, r22
					
				while ((TIFR1&(1<<OCF1A) )==0){
 100:	b1 9b       	sbis	0x16, 1	; 22
 102:	fe cf       	rjmp	.-4      	; 0x100 <__vector_1+0x50>
						
				}
				TCCR1B =0;
 104:	10 82       	st	Z, r1
				TIFR1 = 1<<OCF1A;
 106:	56 bb       	out	0x16, r21	; 22
		

}
ISR(INT0_vect){
	
		for(int i = 0; i < 3; i++){
 108:	01 96       	adiw	r24, 0x01	; 1
 10a:	83 30       	cpi	r24, 0x03	; 3
 10c:	91 05       	cpc	r25, r1
 10e:	61 f7       	brne	.-40     	; 0xe8 <__vector_1+0x38>
	}
	


							
							PORTB=0b00;
 110:	15 b8       	out	0x05, r1	; 5
	
}
 112:	ff 91       	pop	r31
 114:	ef 91       	pop	r30
 116:	df 91       	pop	r29
 118:	cf 91       	pop	r28
 11a:	bf 91       	pop	r27
 11c:	af 91       	pop	r26
 11e:	9f 91       	pop	r25
 120:	8f 91       	pop	r24
 122:	6f 91       	pop	r22
 124:	5f 91       	pop	r21
 126:	4f 91       	pop	r20
 128:	3f 91       	pop	r19
 12a:	2f 91       	pop	r18
 12c:	0f 90       	pop	r0
 12e:	0f be       	out	0x3f, r0	; 63
 130:	0f 90       	pop	r0
 132:	1f 90       	pop	r1
 134:	18 95       	reti

00000136 <_exit>:
 136:	f8 94       	cli

00000138 <__stop_program>:
 138:	ff cf       	rjmp	.-2      	; 0x138 <__stop_program>

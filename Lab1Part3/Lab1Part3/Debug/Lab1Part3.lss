
Lab1Part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000340  000003b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000340  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003b8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000428  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006e7  00000000  00000000  00000450  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000647  00000000  00000000  00000b37  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000029c  00000000  00000000  0000117e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000007c  00000000  00000000  0000141c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000036d  00000000  00000000  00001498  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000cb  00000000  00000000  00001805  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000018d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__vector_1>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e4       	ldi	r30, 0x40	; 64
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  8e:	0c 94 9e 01 	jmp	0x33c	; 0x33c <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:


int main(void)
{
	
	TCCR0A = 0;
  96:	14 bc       	out	0x24, r1	; 36
	TCCR0B = 0x05;
  98:	85 e0       	ldi	r24, 0x05	; 5
  9a:	85 bd       	out	0x25, r24	; 37

	//
	DDRB=0xFF;
  9c:	8f ef       	ldi	r24, 0xFF	; 255
  9e:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~(1 << 5);
  a0:	25 98       	cbi	0x04, 5	; 4
	OCR1A = 0xA4CA;
  a2:	8a ec       	ldi	r24, 0xCA	; 202
  a4:	94 ea       	ldi	r25, 0xA4	; 164
  a6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
  aa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	
	
		EIMSK = (1 << INT0);
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	8d bb       	out	0x1d, r24	; 29
		sei();
  b2:	78 94       	sei
  b4:	ff cf       	rjmp	.-2      	; 0xb4 <main+0x1e>

000000b6 <__vector_1>:
		while(1){}
		

}

ISR(INT0_vect){
  b6:	1f 92       	push	r1
  b8:	0f 92       	push	r0
  ba:	0f b6       	in	r0, 0x3f	; 63
  bc:	0f 92       	push	r0
  be:	11 24       	eor	r1, r1
  c0:	2f 93       	push	r18
  c2:	3f 93       	push	r19
  c4:	4f 93       	push	r20
  c6:	5f 93       	push	r21
  c8:	6f 93       	push	r22
  ca:	7f 93       	push	r23
  cc:	8f 93       	push	r24
  ce:	9f 93       	push	r25
  d0:	af 93       	push	r26
  d2:	bf 93       	push	r27
  d4:	ef 93       	push	r30
  d6:	ff 93       	push	r31
	
	srand(TCNT0);
  d8:	86 b5       	in	r24, 0x26	; 38
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	0e 94 30 01 	call	0x260	; 0x260 <srand>


	switch(rand()%6)
  e0:	0e 94 2b 01 	call	0x256	; 0x256 <rand>
  e4:	66 e0       	ldi	r22, 0x06	; 6
  e6:	70 e0       	ldi	r23, 0x00	; 0
  e8:	0e 94 b7 00 	call	0x16e	; 0x16e <__divmodhi4>
  ec:	82 30       	cpi	r24, 0x02	; 2
  ee:	91 05       	cpc	r25, r1
  f0:	99 f0       	breq	.+38     	; 0x118 <__vector_1+0x62>
  f2:	2c f4       	brge	.+10     	; 0xfe <__vector_1+0x48>
  f4:	00 97       	sbiw	r24, 0x00	; 0
  f6:	51 f0       	breq	.+20     	; 0x10c <__vector_1+0x56>
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	59 f0       	breq	.+22     	; 0x112 <__vector_1+0x5c>
  fc:	19 c0       	rjmp	.+50     	; 0x130 <__vector_1+0x7a>
  fe:	84 30       	cpi	r24, 0x04	; 4
 100:	91 05       	cpc	r25, r1
 102:	81 f0       	breq	.+32     	; 0x124 <__vector_1+0x6e>
 104:	64 f0       	brlt	.+24     	; 0x11e <__vector_1+0x68>
 106:	05 97       	sbiw	r24, 0x05	; 5
 108:	81 f0       	breq	.+32     	; 0x12a <__vector_1+0x74>
 10a:	12 c0       	rjmp	.+36     	; 0x130 <__vector_1+0x7a>
	{
		case 0:
		PORTB = 0b1;
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	85 b9       	out	0x05, r24	; 5
		break;
 110:	11 c0       	rjmp	.+34     	; 0x134 <__vector_1+0x7e>
		
		case 1:
		PORTB = 0b10;
 112:	82 e0       	ldi	r24, 0x02	; 2
 114:	85 b9       	out	0x05, r24	; 5
		break;
 116:	0e c0       	rjmp	.+28     	; 0x134 <__vector_1+0x7e>
		
		case 2:
		PORTB = 0b11;
 118:	83 e0       	ldi	r24, 0x03	; 3
 11a:	85 b9       	out	0x05, r24	; 5
		break;
 11c:	0b c0       	rjmp	.+22     	; 0x134 <__vector_1+0x7e>
		
		case 3:
		PORTB = 0b1010;
 11e:	8a e0       	ldi	r24, 0x0A	; 10
 120:	85 b9       	out	0x05, r24	; 5
		break;
 122:	08 c0       	rjmp	.+16     	; 0x134 <__vector_1+0x7e>
		
		case 4:
		PORTB = 0b1011;
 124:	8b e0       	ldi	r24, 0x0B	; 11
 126:	85 b9       	out	0x05, r24	; 5
		break;
 128:	05 c0       	rjmp	.+10     	; 0x134 <__vector_1+0x7e>
		
		case 5:
		PORTB = 0b1110;
 12a:	8e e0       	ldi	r24, 0x0E	; 14
 12c:	85 b9       	out	0x05, r24	; 5
		break;
 12e:	02 c0       	rjmp	.+4      	; 0x134 <__vector_1+0x7e>
		
		
		
		default:
			PORTB = 0b1111;
 130:	8f e0       	ldi	r24, 0x0F	; 15
 132:	85 b9       	out	0x05, r24	; 5
	}
			TCCR1A = 0;
 134:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
			TCCR1B =0b01101;
 138:	8d e0       	ldi	r24, 0x0D	; 13
 13a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
					
			while ((TIFR1&(1<<OCF1A) )==0){
 13e:	b1 9b       	sbis	0x16, 1	; 22
 140:	fe cf       	rjmp	.-4      	; 0x13e <__vector_1+0x88>
						
			}
			TCCR1B =0;
 142:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
			TIFR1 = 1<<OCF1A;
 146:	82 e0       	ldi	r24, 0x02	; 2
 148:	86 bb       	out	0x16, r24	; 22

	
	
	PORTB=0b00;
 14a:	15 b8       	out	0x05, r1	; 5
}
 14c:	ff 91       	pop	r31
 14e:	ef 91       	pop	r30
 150:	bf 91       	pop	r27
 152:	af 91       	pop	r26
 154:	9f 91       	pop	r25
 156:	8f 91       	pop	r24
 158:	7f 91       	pop	r23
 15a:	6f 91       	pop	r22
 15c:	5f 91       	pop	r21
 15e:	4f 91       	pop	r20
 160:	3f 91       	pop	r19
 162:	2f 91       	pop	r18
 164:	0f 90       	pop	r0
 166:	0f be       	out	0x3f, r0	; 63
 168:	0f 90       	pop	r0
 16a:	1f 90       	pop	r1
 16c:	18 95       	reti

0000016e <__divmodhi4>:
 16e:	97 fb       	bst	r25, 7
 170:	07 2e       	mov	r0, r23
 172:	16 f4       	brtc	.+4      	; 0x178 <__divmodhi4+0xa>
 174:	00 94       	com	r0
 176:	07 d0       	rcall	.+14     	; 0x186 <__divmodhi4_neg1>
 178:	77 fd       	sbrc	r23, 7
 17a:	09 d0       	rcall	.+18     	; 0x18e <__divmodhi4_neg2>
 17c:	0e 94 cb 00 	call	0x196	; 0x196 <__udivmodhi4>
 180:	07 fc       	sbrc	r0, 7
 182:	05 d0       	rcall	.+10     	; 0x18e <__divmodhi4_neg2>
 184:	3e f4       	brtc	.+14     	; 0x194 <__divmodhi4_exit>

00000186 <__divmodhi4_neg1>:
 186:	90 95       	com	r25
 188:	81 95       	neg	r24
 18a:	9f 4f       	sbci	r25, 0xFF	; 255
 18c:	08 95       	ret

0000018e <__divmodhi4_neg2>:
 18e:	70 95       	com	r23
 190:	61 95       	neg	r22
 192:	7f 4f       	sbci	r23, 0xFF	; 255

00000194 <__divmodhi4_exit>:
 194:	08 95       	ret

00000196 <__udivmodhi4>:
 196:	aa 1b       	sub	r26, r26
 198:	bb 1b       	sub	r27, r27
 19a:	51 e1       	ldi	r21, 0x11	; 17
 19c:	07 c0       	rjmp	.+14     	; 0x1ac <__udivmodhi4_ep>

0000019e <__udivmodhi4_loop>:
 19e:	aa 1f       	adc	r26, r26
 1a0:	bb 1f       	adc	r27, r27
 1a2:	a6 17       	cp	r26, r22
 1a4:	b7 07       	cpc	r27, r23
 1a6:	10 f0       	brcs	.+4      	; 0x1ac <__udivmodhi4_ep>
 1a8:	a6 1b       	sub	r26, r22
 1aa:	b7 0b       	sbc	r27, r23

000001ac <__udivmodhi4_ep>:
 1ac:	88 1f       	adc	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	5a 95       	dec	r21
 1b2:	a9 f7       	brne	.-22     	; 0x19e <__udivmodhi4_loop>
 1b4:	80 95       	com	r24
 1b6:	90 95       	com	r25
 1b8:	bc 01       	movw	r22, r24
 1ba:	cd 01       	movw	r24, r26
 1bc:	08 95       	ret

000001be <do_rand>:
 1be:	8f 92       	push	r8
 1c0:	9f 92       	push	r9
 1c2:	af 92       	push	r10
 1c4:	bf 92       	push	r11
 1c6:	cf 92       	push	r12
 1c8:	df 92       	push	r13
 1ca:	ef 92       	push	r14
 1cc:	ff 92       	push	r15
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	ec 01       	movw	r28, r24
 1d4:	68 81       	ld	r22, Y
 1d6:	79 81       	ldd	r23, Y+1	; 0x01
 1d8:	8a 81       	ldd	r24, Y+2	; 0x02
 1da:	9b 81       	ldd	r25, Y+3	; 0x03
 1dc:	61 15       	cp	r22, r1
 1de:	71 05       	cpc	r23, r1
 1e0:	81 05       	cpc	r24, r1
 1e2:	91 05       	cpc	r25, r1
 1e4:	21 f4       	brne	.+8      	; 0x1ee <do_rand+0x30>
 1e6:	64 e2       	ldi	r22, 0x24	; 36
 1e8:	79 ed       	ldi	r23, 0xD9	; 217
 1ea:	8b e5       	ldi	r24, 0x5B	; 91
 1ec:	97 e0       	ldi	r25, 0x07	; 7
 1ee:	2d e1       	ldi	r18, 0x1D	; 29
 1f0:	33 ef       	ldi	r19, 0xF3	; 243
 1f2:	41 e0       	ldi	r20, 0x01	; 1
 1f4:	50 e0       	ldi	r21, 0x00	; 0
 1f6:	0e 94 3b 01 	call	0x276	; 0x276 <__divmodsi4>
 1fa:	49 01       	movw	r8, r18
 1fc:	5a 01       	movw	r10, r20
 1fe:	9b 01       	movw	r18, r22
 200:	ac 01       	movw	r20, r24
 202:	a7 ea       	ldi	r26, 0xA7	; 167
 204:	b1 e4       	ldi	r27, 0x41	; 65
 206:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <__muluhisi3>
 20a:	6b 01       	movw	r12, r22
 20c:	7c 01       	movw	r14, r24
 20e:	ac ee       	ldi	r26, 0xEC	; 236
 210:	b4 ef       	ldi	r27, 0xF4	; 244
 212:	a5 01       	movw	r20, r10
 214:	94 01       	movw	r18, r8
 216:	0e 94 68 01 	call	0x2d0	; 0x2d0 <__mulohisi3>
 21a:	dc 01       	movw	r26, r24
 21c:	cb 01       	movw	r24, r22
 21e:	8c 0d       	add	r24, r12
 220:	9d 1d       	adc	r25, r13
 222:	ae 1d       	adc	r26, r14
 224:	bf 1d       	adc	r27, r15
 226:	b7 ff       	sbrs	r27, 7
 228:	03 c0       	rjmp	.+6      	; 0x230 <do_rand+0x72>
 22a:	01 97       	sbiw	r24, 0x01	; 1
 22c:	a1 09       	sbc	r26, r1
 22e:	b0 48       	sbci	r27, 0x80	; 128
 230:	88 83       	st	Y, r24
 232:	99 83       	std	Y+1, r25	; 0x01
 234:	aa 83       	std	Y+2, r26	; 0x02
 236:	bb 83       	std	Y+3, r27	; 0x03
 238:	9f 77       	andi	r25, 0x7F	; 127
 23a:	df 91       	pop	r29
 23c:	cf 91       	pop	r28
 23e:	ff 90       	pop	r15
 240:	ef 90       	pop	r14
 242:	df 90       	pop	r13
 244:	cf 90       	pop	r12
 246:	bf 90       	pop	r11
 248:	af 90       	pop	r10
 24a:	9f 90       	pop	r9
 24c:	8f 90       	pop	r8
 24e:	08 95       	ret

00000250 <rand_r>:
 250:	0e 94 df 00 	call	0x1be	; 0x1be <do_rand>
 254:	08 95       	ret

00000256 <rand>:
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	91 e0       	ldi	r25, 0x01	; 1
 25a:	0e 94 df 00 	call	0x1be	; 0x1be <do_rand>
 25e:	08 95       	ret

00000260 <srand>:
 260:	a0 e0       	ldi	r26, 0x00	; 0
 262:	b0 e0       	ldi	r27, 0x00	; 0
 264:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 268:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 26c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 270:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 274:	08 95       	ret

00000276 <__divmodsi4>:
 276:	05 2e       	mov	r0, r21
 278:	97 fb       	bst	r25, 7
 27a:	1e f4       	brtc	.+6      	; 0x282 <__divmodsi4+0xc>
 27c:	00 94       	com	r0
 27e:	0e 94 52 01 	call	0x2a4	; 0x2a4 <__negsi2>
 282:	57 fd       	sbrc	r21, 7
 284:	07 d0       	rcall	.+14     	; 0x294 <__divmodsi4_neg2>
 286:	0e 94 6d 01 	call	0x2da	; 0x2da <__udivmodsi4>
 28a:	07 fc       	sbrc	r0, 7
 28c:	03 d0       	rcall	.+6      	; 0x294 <__divmodsi4_neg2>
 28e:	4e f4       	brtc	.+18     	; 0x2a2 <__divmodsi4_exit>
 290:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__negsi2>

00000294 <__divmodsi4_neg2>:
 294:	50 95       	com	r21
 296:	40 95       	com	r20
 298:	30 95       	com	r19
 29a:	21 95       	neg	r18
 29c:	3f 4f       	sbci	r19, 0xFF	; 255
 29e:	4f 4f       	sbci	r20, 0xFF	; 255
 2a0:	5f 4f       	sbci	r21, 0xFF	; 255

000002a2 <__divmodsi4_exit>:
 2a2:	08 95       	ret

000002a4 <__negsi2>:
 2a4:	90 95       	com	r25
 2a6:	80 95       	com	r24
 2a8:	70 95       	com	r23
 2aa:	61 95       	neg	r22
 2ac:	7f 4f       	sbci	r23, 0xFF	; 255
 2ae:	8f 4f       	sbci	r24, 0xFF	; 255
 2b0:	9f 4f       	sbci	r25, 0xFF	; 255
 2b2:	08 95       	ret

000002b4 <__muluhisi3>:
 2b4:	0e 94 8f 01 	call	0x31e	; 0x31e <__umulhisi3>
 2b8:	a5 9f       	mul	r26, r21
 2ba:	90 0d       	add	r25, r0
 2bc:	b4 9f       	mul	r27, r20
 2be:	90 0d       	add	r25, r0
 2c0:	a4 9f       	mul	r26, r20
 2c2:	80 0d       	add	r24, r0
 2c4:	91 1d       	adc	r25, r1
 2c6:	11 24       	eor	r1, r1
 2c8:	08 95       	ret

000002ca <__mulshisi3>:
 2ca:	b7 ff       	sbrs	r27, 7
 2cc:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__muluhisi3>

000002d0 <__mulohisi3>:
 2d0:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <__muluhisi3>
 2d4:	82 1b       	sub	r24, r18
 2d6:	93 0b       	sbc	r25, r19
 2d8:	08 95       	ret

000002da <__udivmodsi4>:
 2da:	a1 e2       	ldi	r26, 0x21	; 33
 2dc:	1a 2e       	mov	r1, r26
 2de:	aa 1b       	sub	r26, r26
 2e0:	bb 1b       	sub	r27, r27
 2e2:	fd 01       	movw	r30, r26
 2e4:	0d c0       	rjmp	.+26     	; 0x300 <__udivmodsi4_ep>

000002e6 <__udivmodsi4_loop>:
 2e6:	aa 1f       	adc	r26, r26
 2e8:	bb 1f       	adc	r27, r27
 2ea:	ee 1f       	adc	r30, r30
 2ec:	ff 1f       	adc	r31, r31
 2ee:	a2 17       	cp	r26, r18
 2f0:	b3 07       	cpc	r27, r19
 2f2:	e4 07       	cpc	r30, r20
 2f4:	f5 07       	cpc	r31, r21
 2f6:	20 f0       	brcs	.+8      	; 0x300 <__udivmodsi4_ep>
 2f8:	a2 1b       	sub	r26, r18
 2fa:	b3 0b       	sbc	r27, r19
 2fc:	e4 0b       	sbc	r30, r20
 2fe:	f5 0b       	sbc	r31, r21

00000300 <__udivmodsi4_ep>:
 300:	66 1f       	adc	r22, r22
 302:	77 1f       	adc	r23, r23
 304:	88 1f       	adc	r24, r24
 306:	99 1f       	adc	r25, r25
 308:	1a 94       	dec	r1
 30a:	69 f7       	brne	.-38     	; 0x2e6 <__udivmodsi4_loop>
 30c:	60 95       	com	r22
 30e:	70 95       	com	r23
 310:	80 95       	com	r24
 312:	90 95       	com	r25
 314:	9b 01       	movw	r18, r22
 316:	ac 01       	movw	r20, r24
 318:	bd 01       	movw	r22, r26
 31a:	cf 01       	movw	r24, r30
 31c:	08 95       	ret

0000031e <__umulhisi3>:
 31e:	a2 9f       	mul	r26, r18
 320:	b0 01       	movw	r22, r0
 322:	b3 9f       	mul	r27, r19
 324:	c0 01       	movw	r24, r0
 326:	a3 9f       	mul	r26, r19
 328:	70 0d       	add	r23, r0
 32a:	81 1d       	adc	r24, r1
 32c:	11 24       	eor	r1, r1
 32e:	91 1d       	adc	r25, r1
 330:	b2 9f       	mul	r27, r18
 332:	70 0d       	add	r23, r0
 334:	81 1d       	adc	r24, r1
 336:	11 24       	eor	r1, r1
 338:	91 1d       	adc	r25, r1
 33a:	08 95       	ret

0000033c <_exit>:
 33c:	f8 94       	cli

0000033e <__stop_program>:
 33e:	ff cf       	rjmp	.-2      	; 0x33e <__stop_program>

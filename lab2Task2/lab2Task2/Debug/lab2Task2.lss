
lab2Task2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000190  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000013c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000190  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000737  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000683  00000000  00000000  00000957  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000030d  00000000  00000000  00000fda  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000012e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ad  00000000  00000000  0000130c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000d9  00000000  00000000  000016b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001792  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 9c 00 	jmp	0x138	; 0x138 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
	
	int PWM = 0;
	int PWMPot = 0;
	int PWMPotMeasured = 0;
	
	DDRB = 0b11;
  80:	83 e0       	ldi	r24, 0x03	; 3
  82:	84 b9       	out	0x04, r24	; 4
	PORTB = 0b01; 
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	85 b9       	out	0x05, r24	; 5
 //DDRD|=(1<<2)|(1<<3);
 PORTD=0x08;//OCR0A PWM, set PortD.6 output
  88:	88 e0       	ldi	r24, 0x08	; 8
  8a:	8b b9       	out	0x0b, r24	; 11
 DDRD|=(1<<6);//set OCR0A PWM, fast PWM, no prescaler, non-inverted
  8c:	56 9a       	sbi	0x0a, 6	; 10
 
 TCCR0A=0x83;
  8e:	83 e8       	ldi	r24, 0x83	; 131
  90:	84 bd       	out	0x24, r24	; 36

	DDRB |= ( 1<<5) ; //Make pin 4 of port D as a output
  92:	25 9a       	sbi	0x04, 5	; 4

	DDRC = 0x00; // Make pin 5 of port C as a input
  94:	17 b8       	out	0x07, r1	; 7


int main(void)
{
	
	int PWM = 0;
  96:	60 e0       	ldi	r22, 0x00	; 0
			}
			
			
			
			OCR0A = PWM;
			TCCR0B=0b101;
  98:	75 e0       	ldi	r23, 0x05	; 5

			{

				switch(i){
					case 1:
						PORTB ^= 0b11;
  9a:	b3 e0       	ldi	r27, 0x03	; 3
															
					break;
					case 3:
					//0
					//0
					PWM=0x00;
  9c:	a0 e0       	ldi	r26, 0x00	; 0

			}
			
			
			
			OCR0A = PWM;
  9e:	ef e9       	ldi	r30, 0x9F	; 159
										
					break;
					case 2:
					//87.5
					//223 - df
					PWM=0xdf;
  a0:	ff ed       	ldi	r31, 0xDF	; 223


int main(void)
{
	
	int PWM = 0;
  a2:	42 e0       	ldi	r20, 0x02	; 2
  a4:	50 e0       	ldi	r21, 0x00	; 0
  a6:	02 c0       	rjmp	.+4      	; 0xac <main+0x2c>
  a8:	4f 5f       	subi	r20, 0xFF	; 255
  aa:	5f 4f       	sbci	r21, 0xFF	; 255
  ac:	9a 01       	movw	r18, r20
  ae:	21 50       	subi	r18, 0x01	; 1
  b0:	31 09       	sbc	r19, r1
		
		
		for (int i = 1; i <6; i++)
		{
			
			if(PINC & (1<<i) ) //if PIN5 of port C is high
  b2:	86 b1       	in	r24, 0x06	; 6
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	02 2e       	mov	r0, r18
  b8:	02 c0       	rjmp	.+4      	; 0xbe <main+0x3e>
  ba:	95 95       	asr	r25
  bc:	87 95       	ror	r24
  be:	0a 94       	dec	r0
  c0:	e2 f7       	brpl	.-8      	; 0xba <main+0x3a>
  c2:	80 ff       	sbrs	r24, 0
  c4:	06 c0       	rjmp	.+12     	; 0xd2 <main+0x52>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c6:	8f e3       	ldi	r24, 0x3F	; 63
  c8:	9c e9       	ldi	r25, 0x9C	; 156
  ca:	01 97       	sbiw	r24, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <main+0x4a>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <main+0x50>
  d0:	00 00       	nop

			{
				_delay_ms(10);
			}
			if(PINC & (1<<i) ) //if PIN5 of port C is high
  d2:	86 b1       	in	r24, 0x06	; 6
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	02 2e       	mov	r0, r18
  d8:	02 c0       	rjmp	.+4      	; 0xde <main+0x5e>
  da:	95 95       	asr	r25
  dc:	87 95       	ror	r24
  de:	0a 94       	dec	r0
  e0:	e2 f7       	brpl	.-8      	; 0xda <main+0x5a>
  e2:	80 ff       	sbrs	r24, 0
  e4:	1b c0       	rjmp	.+54     	; 0x11c <main+0x9c>

			{

				switch(i){
  e6:	23 30       	cpi	r18, 0x03	; 3
  e8:	31 05       	cpc	r19, r1
  ea:	a9 f0       	breq	.+42     	; 0x116 <main+0x96>
  ec:	38 f4       	brcc	.+14     	; 0xfc <main+0x7c>
  ee:	21 30       	cpi	r18, 0x01	; 1
  f0:	31 05       	cpc	r19, r1
  f2:	69 f0       	breq	.+26     	; 0x10e <main+0x8e>
  f4:	22 30       	cpi	r18, 0x02	; 2
  f6:	31 05       	cpc	r19, r1
  f8:	d9 f0       	breq	.+54     	; 0x130 <main+0xb0>
  fa:	10 c0       	rjmp	.+32     	; 0x11c <main+0x9c>
  fc:	24 30       	cpi	r18, 0x04	; 4
  fe:	31 05       	cpc	r19, r1
 100:	21 f0       	breq	.+8      	; 0x10a <main+0x8a>
 102:	25 30       	cpi	r18, 0x05	; 5
 104:	31 05       	cpc	r19, r1
 106:	81 f0       	breq	.+32     	; 0x128 <main+0xa8>
 108:	09 c0       	rjmp	.+18     	; 0x11c <main+0x9c>
					break;
					
					case 4:
					//25
					//63 -3f
					PWM=0x3f;
 10a:	6f e3       	ldi	r22, 0x3F	; 63
 10c:	12 c0       	rjmp	.+36     	; 0x132 <main+0xb2>

			{

				switch(i){
					case 1:
						PORTB ^= 0b11;
 10e:	85 b1       	in	r24, 0x05	; 5
 110:	8b 27       	eor	r24, r27
 112:	85 b9       	out	0x05, r24	; 5
										
					break;
 114:	0e c0       	rjmp	.+28     	; 0x132 <main+0xb2>
					break;
					case 3:
					//0
					//0
					PWM=0x00;
					PORTB |= (1<<5);
 116:	2d 9a       	sbi	0x05, 5	; 5
															
					break;
					case 3:
					//0
					//0
					PWM=0x00;
 118:	6a 2f       	mov	r22, r26
					PORTB |= (1<<5);
					break;
 11a:	0b c0       	rjmp	.+22     	; 0x132 <main+0xb2>

			}
			
			
			
			OCR0A = PWM;
 11c:	67 bd       	out	0x27, r22	; 39
			TCCR0B=0b101;
 11e:	75 bd       	out	0x25, r23	; 37
			PWM = PWMPotMeasured;
			PWMPot = PWMPotMeasured;
		}
		
		
		for (int i = 1; i <6; i++)
 120:	46 30       	cpi	r20, 0x06	; 6
 122:	51 05       	cpc	r21, r1
 124:	0c f2       	brlt	.-126    	; 0xa8 <main+0x28>
 126:	bd cf       	rjmp	.-134    	; 0xa2 <main+0x22>

			}
			
			
			
			OCR0A = PWM;
 128:	e7 bd       	out	0x27, r30	; 39
			TCCR0B=0b101;
 12a:	75 bd       	out	0x25, r23	; 37
					break;
					
					case 5:
					//62.5
					//159 - 9f
					PWM=0x9f;
 12c:	6e 2f       	mov	r22, r30
 12e:	b9 cf       	rjmp	.-142    	; 0xa2 <main+0x22>
										
					break;
					case 2:
					//87.5
					//223 - df
					PWM=0xdf;
 130:	6f 2f       	mov	r22, r31

			}
			
			
			
			OCR0A = PWM;
 132:	67 bd       	out	0x27, r22	; 39
			TCCR0B=0b101;
 134:	75 bd       	out	0x25, r23	; 37
 136:	b8 cf       	rjmp	.-144    	; 0xa8 <main+0x28>

00000138 <_exit>:
 138:	f8 94       	cli

0000013a <__stop_program>:
 13a:	ff cf       	rjmp	.-2      	; 0x13a <__stop_program>
